{"ast":null,"code":"var _jsxFileName = \"/home/masato/work/portfolio-front-2020-10/components/Contact.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Axios from 'axios';\nimport React, { useState } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap';\nimport url from '../lib/url';\nimport Alert from './Alert';\nexport default function Contact(props) {\n  const {\n    0: email,\n    1: setEmail\n  } = useState({\n    name: '',\n    text: ''\n  });\n  const {\n    0: isDisabled,\n    1: setIsDisabled\n  } = useState(false);\n  const {\n    0: emailSent,\n    1: setEmailSent\n  } = useState(false);\n\n  function emailIsValid(email) {\n    return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  }\n\n  const handleMails = async e => {\n    const {\n      name,\n      text\n    } = email;\n\n    if (emailIsValid(name)) {\n      e.preventDefault();\n      await Axios.post(`${url}/email`, {\n        emailFrom: name,\n        subject: `Email Portfolio de la part de: ${name}`,\n        message: text\n      });\n      setEmailSent(true);\n    } else {\n      e.preventDefault();\n      setIsDisabled(true);\n    }\n  };\n\n  const handleName = e => {\n    setEmail(_objectSpread(_objectSpread({}, email), {}, {\n      name: e.target.value\n    }));\n    setIsDisabled(false);\n  };\n\n  const handleText = e => {\n    setEmail(_objectSpread(_objectSpread({}, email), {}, {\n      text: e.target.value\n    }));\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Row, {\n    style: {\n      margin: '20px 0'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), __jsx(Col, {\n    sm: 10,\n    md: 8,\n    lg: 6,\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, __jsx(Form, {\n    onSubmit: e => handleMails(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, __jsx(Label, {\n    style: {\n      color: '#3b5998',\n      fontSize: 18\n    },\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 33\n    }\n  }, \"Email adress\")), __jsx(Input, {\n    style: {\n      fontSize: 20,\n      fontWeight: 700\n    },\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    placeholder: \"name@email.com\",\n    onChange: e => handleName(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }), isDisabled ? __jsx(Alert, {\n    color: \"danger\",\n    message: \"email invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }) : ''), __jsx(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, __jsx(Label, {\n    style: {\n      color: '#3b5998',\n      fontSize: 18\n    },\n    for: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }, __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 33\n    }\n  }, \"Message\")), __jsx(Input, {\n    style: {\n      fontSize: 20,\n      fontWeight: 700,\n      height: '20vh'\n    },\n    placeholder: \"your message\",\n    type: \"textarea\",\n    name: \"comment\",\n    id: \"comment\",\n    onChange: e => handleText(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 29\n    }\n  })), __jsx(Button, {\n    disabled: isDisabled,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, \"Submit\"))), __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  })), emailSent ? __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, __jsx(Col, {\n    sm: {\n      size: 4,\n      offset: 4\n    },\n    md: {\n      size: 4,\n      offset: 4\n    },\n    lg: {\n      size: 4,\n      offset: 4\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, __jsx(Alert, {\n    color: \"success\",\n    message: \"eMail sent!\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }))) : '');\n}","map":{"version":3,"sources":["/home/masato/work/portfolio-front-2020-10/components/Contact.js"],"names":["Axios","React","useState","Button","Form","FormGroup","Label","Input","Row","Col","url","Alert","Contact","props","email","setEmail","name","text","isDisabled","setIsDisabled","emailSent","setEmailSent","emailIsValid","test","handleMails","e","preventDefault","post","emailFrom","subject","message","handleName","target","value","handleText","margin","textAlign","color","fontSize","fontWeight","height","size","offset"],"mappings":"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","sourcesContent":["import Axios from 'axios'\nimport React, { useState } from 'react'\nimport { Button, Form, FormGroup, Label, Input, Row, Col } from 'reactstrap'\nimport url from '../lib/url'\nimport Alert from './Alert'\n\nexport default function Contact(props) {\n    const [email, setEmail] = useState({ name: '', text: '' })\n    const [isDisabled, setIsDisabled] = useState(false)\n    const [emailSent, setEmailSent] = useState(false)\n\n    function emailIsValid(email) {\n        return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    }\n\n    const handleMails = async (e) => {\n        const { name, text } = email\n        if (emailIsValid(name)) {\n            e.preventDefault()\n            await Axios.post(`${url}/email`, {\n                emailFrom: name,\n                subject: `Email Portfolio de la part de: ${name}`,\n                message: text,\n            })\n            setEmailSent(true)\n        } else {\n            e.preventDefault()\n            setIsDisabled(true)\n        }\n    }\n\n    const handleName = (e) => {\n        setEmail({ ...email, name: e.target.value })\n        setIsDisabled(false)\n    }\n\n    const handleText = (e) => {\n        setEmail({ ...email, text: e.target.value })\n    }\n\n    return (\n        <>\n            <Row style={{ margin: '20px 0' }}>\n                <Col></Col>\n                <Col sm={10} md={8} lg={6} style={{ textAlign: 'center' }}>\n                    <Form onSubmit={(e) => handleMails(e)}>\n                        <FormGroup>\n                            <Label\n                                style={{\n                                    color: '#3b5998',\n                                    fontSize: 18,\n                                }}\n                                for=\"email\"\n                            >\n                                <b>Email adress</b>\n                            </Label>\n                            <Input\n                                style={{\n                                    fontSize: 20,\n                                    fontWeight: 700,\n                                }}\n                                type=\"text\"\n                                name=\"name\"\n                                id=\"name\"\n                                placeholder=\"name@email.com\"\n                                onChange={(e) => handleName(e)}\n                            />\n                            {isDisabled ? (\n                                <Alert color=\"danger\" message=\"email invalid\" />\n                            ) : (\n                                ''\n                            )}\n                        </FormGroup>\n                        <FormGroup>\n                            <Label\n                                style={{ color: '#3b5998', fontSize: 18 }}\n                                for=\"comment\"\n                            >\n                                <b>Message</b>\n                            </Label>\n                            <Input\n                                style={{\n                                    fontSize: 20,\n                                    fontWeight: 700,\n                                    height: '20vh',\n                                }}\n                                placeholder=\"your message\"\n                                type=\"textarea\"\n                                name=\"comment\"\n                                id=\"comment\"\n                                onChange={(e) => handleText(e)}\n                            />\n                        </FormGroup>\n                        <Button disabled={isDisabled} color=\"primary\">\n                            Submit\n                        </Button>\n                    </Form>\n                </Col>\n                <Col></Col>\n            </Row>\n            {emailSent ? (\n                <Row>\n                    <Col\n                        sm={{ size: 4, offset: 4 }}\n                        md={{ size: 4, offset: 4 }}\n                        lg={{ size: 4, offset: 4 }}\n                    >\n                        <Alert color=\"success\" message=\"eMail sent!\" />\n                    </Col>\n                </Row>\n            ) : (\n                ''\n            )}\n        </>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}